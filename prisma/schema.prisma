// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


generator pothos {
  provider = "prisma-pothos-types"
}

generator pothosCrud {
  provider = "prisma-generator-pothos-codegen"
  generatorConfigPath = "../pothos.config.cjs"
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  name         String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  
  // Relations
  todoLists    TodoList[]
  todos        Todo[]
  
  @@map("users")
}

model TodoList {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  todos       Todo[]
  
  @@map("todo_lists")
}

model Todo {
  id          String       @id @default(cuid())
  title       String
  description String?
  status      TodoStatus   @default(PENDING)
  priority    Priority     @default(MEDIUM)
  dueDate     DateTime?
  completedAt DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  // Relations
  userId      String
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  todoListId  String?
  todoList    TodoList?    @relation(fields: [todoListId], references: [id], onDelete: SetNull)
  
  @@map("todos")
}

model DomainEvent {
  id          String   @id @default(cuid())
  eventType   String
  aggregateId String
  eventData   Json
  version     Int      @default(1)
  createdAt   DateTime @default(now())
  
  @@map("domain_events")
}

enum TodoStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}