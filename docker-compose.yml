version: '3.8'

services:
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:15-alpine}
    container_name: ${POSTGRES_CONTAINER:-pothos-todo-postgres}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pothos_todo}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pothos-network

  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${REDIS_CONTAINER:-pothos-todo-redis}
    command: redis-server --requirepass ${REDIS_PASSWORD:-""}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pothos-network

  qdrant:
    image: ${QDRANT_IMAGE:-qdrant/qdrant:latest}
    container_name: ${QDRANT_CONTAINER:-pothos-todo-qdrant}
    ports:
      - "${QDRANT_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    networks:
      - pothos-network

  # Hive Gateway - GraphQL Federation Gateway
  hive-gateway:
    image: ${HIVE_GATEWAY_IMAGE:-ghcr.io/graphql-hive/gateway:latest}
    container_name: ${HIVE_GATEWAY_CONTAINER:-pothos-todo-gateway}
    ports:
      - "${GATEWAY_PORT:-4000}:4000"

    environment:
      # Hive Configuration
      HIVE_CDN_ENDPOINT: ${HIVE_CDN_ENDPOINT}
      HIVE_CDN_KEY: ${HIVE_CDN_KEY}
      HIVE_TOKEN: ${HIVE_TOKEN} 
      # Gateway Configuration
      PORT: 4000
      CONFIG_PATH: /app/gateway.ts
      # Subgraph URLs (for development mode)
      USER_SUBGRAPH_URL: ${USER_SUBGRAPH_URL:-http://user-subgraph:4001/graphql}
      TODO_SUBGRAPH_URL: ${TODO_SUBGRAPH_URL:-http://todo-subgraph:4002/graphql}
      AI_SUBGRAPH_URL: ${AI_SUBGRAPH_URL:-http://ai-subgraph:4003/graphql}
      # Monitoring
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
    command: ["hive-gateway", "supergraph", "--port", "4000", "--host", "0.0.0.0"]
    depends_on:
      - user-subgraph
      - todo-subgraph
      - ai-subgraph
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pothos-network
    restart: on-failure:5

  # User Subgraph
  user-subgraph:
    build:
      context: .
      dockerfile: ./docker/subgraphs/user/Dockerfile
    container_name: ${USER_SUBGRAPH_CONTAINER:-pothos-todo-user-subgraph}
    ports:
      - "${USER_SUBGRAPH_PORT:-4001}:4001"
    environment:
      PORT: 4001
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432/pothos_todo}
      REDIS_URL: redis://redis:6379
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pothos-network

  # Todo Subgraph
  todo-subgraph:
    build:
      context: .
      dockerfile: ./docker/subgraphs/todo/Dockerfile
    container_name: ${TODO_SUBGRAPH_CONTAINER:-pothos-todo-todo-subgraph}
    ports:
      - "${TODO_SUBGRAPH_PORT:-4002}:4002"
    environment:
      PORT: 4002
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432/pothos_todo}
      REDIS_URL: redis://redis:6379
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pothos-network

  # AI Subgraph
  ai-subgraph:
    build:
      context: .
      dockerfile: ./docker/subgraphs/ai/Dockerfile
    container_name: ${AI_SUBGRAPH_CONTAINER:-pothos-todo-ai-subgraph}
    ports:
      - "${AI_SUBGRAPH_PORT:-4003}:4003"
    environment:
      PORT: 4003
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:password@postgres:5432/pothos_todo}
      REDIS_URL: redis://redis:6379
      QDRANT_URL: http://qdrant:6333
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NODE_ENV: ${NODE_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - pothos-network

networks:
  pothos-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  qdrant_data: