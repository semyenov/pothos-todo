# Node Environment (development, production, test)
NODE_ENV=development

# Server Configuration
PORT=4000
HOST=localhost
FRONTEND_URL=http://localhost:3000

# Database Configuration (Required)
DATABASE_URL="postgresql://postgres:password@localhost:5432/pothos_todo"

# Session Configuration (Required)
# Generate with: openssl rand -base64 32
SESSION_SECRET=your-secret-key-here-change-in-production

# OAuth - Google
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:4000/auth/google/callback

# OAuth - GitHub  
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_REDIRECT_URI=http://localhost:4000/auth/github/callback

# Telemetry (OpenTelemetry)
TELEMETRY_ENABLED=false
TELEMETRY_SERVICE_NAME=pothos-todo-api
TELEMETRY_SERVICE_VERSION=1.0.0
TELEMETRY_SAMPLING_RATE=1.0

# OpenTelemetry Exporter (optional - for production)
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
# OTEL_EXPORTER_OTLP_HEADERS={"Authorization": "Bearer your-token"}

# Redis Configuration (Optional - for caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=pothos:

# Cache Configuration
CACHE_ENABLED=true
CACHE_DEFAULT_TTL=3600

# AI Configuration
AI_ENABLED=true
OPENAI_API_KEY=
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_EMBEDDING_DIMENSIONS=1536

# Vector Store (Qdrant)
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=

# Security Configuration (Optional)
TLS_CERT_PATH=
TLS_KEY_PATH=
TLS_CA_PATH=
TLS_PFX_PATH=
HTTPS_PORT=8443

# Logging Configuration
LOG_LEVEL=info

# GraphQL Federation Configuration
FEDERATION_TYPE=hive

# Hive Gateway Configuration
# Sign up at https://app.graphql-hive.com to get these values
HIVE_ENDPOINT=https://app.graphql-hive.com
HIVE_TOKEN=your-hive-token-here
HIVE_CDN_ENDPOINT=https://cdn.graphql-hive.com/artifacts/v1/YOUR_TARGET_ID
HIVE_CDN_KEY=your-cdn-key-here
HIVE_TARGET=production

# Subgraph Configuration
USER_SUBGRAPH_URL=http://localhost:4001/graphql
TODO_SUBGRAPH_URL=http://localhost:4002/graphql
AI_SUBGRAPH_URL=http://localhost:4003/graphql

# Subgraph Authentication (optional)
USER_SUBGRAPH_TOKEN=
TODO_SUBGRAPH_TOKEN=
AI_SUBGRAPH_TOKEN=