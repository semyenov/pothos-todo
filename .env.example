# Environment Configuration
NODE_ENV=development

# Server Configuration
PORT=4000
HOST=localhost
FRONTEND_URL=http://localhost:3000
BASE_URL=http://localhost:4000

# Database Configuration
DATABASE_URL=postgresql://postgres:password@localhost:5432/pothos_todo

# PostgreSQL Docker Configuration
POSTGRES_IMAGE=postgres:15-alpine
POSTGRES_CONTAINER=pothos-todo-postgres
POSTGRES_DB=pothos_todo
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_PORT=5432

# Qdrant Docker Configuration
QDRANT_IMAGE=qdrant/qdrant:latest
QDRANT_CONTAINER=pothos-todo-qdrant
QDRANT_PORT=6333
QDRANT_HTTP_PORT=6333
QDRANT_GRPC_PORT=6334

# Logger Configuration
LOG_LEVEL=debug
LOG_DIR=.out/logs

# Build Configuration
BUILD_MINIFY=false
BUILD_SOURCEMAP=true

# Test Database Configuration (for testing)
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/pothos_todo_test

# Authentication & OAuth Configuration
# Session Configuration (опционально)
SESSION_EXPIRES_IN_SECONDS=2592000  # 30 дней (по умолчанию)
SESSION_CLEANUP_INTERVAL=86400      # 24 часа (для cleanup job)

# Google OAuth Configuration
# 1. Перейдите в Google Cloud Console
# 2. Создайте OAuth 2.0 Client ID
# 3. Добавьте redirect URI: http://localhost:4000/auth/google/callback
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# GitHub OAuth Configuration  
# 1. Перейдите в GitHub Settings > Developer settings > OAuth Apps
# 2. Создайте новое OAuth App
# 3. Authorization callback URL: http://localhost:4000/auth/github/callback
GITHUB_CLIENT_ID=your_github_client_id_here 
GITHUB_CLIENT_SECRET=your_github_client_secret_here

# Security Configuration (production only)
# SECURE_COOKIES=true                 # Включите для HTTPS
# ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
# DEBUG_AUTH=false                    # Отключите в production